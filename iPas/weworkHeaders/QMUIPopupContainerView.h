//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIControl.h>

@class CAShapeLayer, QMUIPopupContainerViewWindow, UIColor, UIImageView, UILabel, UIView, UIWindow;

@interface QMUIPopupContainerView : UIControl
{
    CAShapeLayer *_backgroundLayer;
    double _arrowMinX;
    UIImageView *_imageView;
    UILabel *_textLabel;
    _Bool _debug;
    _Bool _automaticallyHidesWhenUserTap;
    _Bool _hidesByUserTap;
    int _preferLayoutDirection;
    int _currentLayoutDirection;
    UIView *_contentView;
    double _maximumWidth;
    double _minimumWidth;
    double _maximumHeight;
    double _minimumHeight;
    double _distanceBetweenTargetRect;
    UIColor *_backgroundColor;
    UIColor *_highlightedBackgroundColor;
    UIColor *_maskViewBackgroundColor;
    UIColor *_shadowColor;
    UIColor *_borderColor;
    double _borderWidth;
    double _cornerRadius;
    CDUnknownBlockType _willHideBlock;
    CDUnknownBlockType _didHideBlock;
    QMUIPopupContainerViewWindow *_popupWindow;
    UIWindow *_previousKeyWindow;
    struct CGSize _arrowSize;
    struct UIEdgeInsets _contentEdgeInsets;
    struct UIEdgeInsets _imageEdgeInsets;
    struct UIEdgeInsets _textEdgeInsets;
    struct UIEdgeInsets _safetyMarginsOfSuperview;
}

+ (void)setDefaultAppearance;
+ (void)initialize;
@property(nonatomic) _Bool hidesByUserTap; // @synthesize hidesByUserTap=_hidesByUserTap;
@property(nonatomic) __weak UIWindow *previousKeyWindow; // @synthesize previousKeyWindow=_previousKeyWindow;
@property(retain, nonatomic) QMUIPopupContainerViewWindow *popupWindow; // @synthesize popupWindow=_popupWindow;
@property(copy, nonatomic) CDUnknownBlockType didHideBlock; // @synthesize didHideBlock=_didHideBlock;
@property(copy, nonatomic) CDUnknownBlockType willHideBlock; // @synthesize willHideBlock=_willHideBlock;
@property(nonatomic) double cornerRadius; // @synthesize cornerRadius=_cornerRadius;
@property(nonatomic) double borderWidth; // @synthesize borderWidth=_borderWidth;
@property(retain, nonatomic) UIColor *borderColor; // @synthesize borderColor=_borderColor;
@property(retain, nonatomic) UIColor *shadowColor; // @synthesize shadowColor=_shadowColor;
@property(retain, nonatomic) UIColor *maskViewBackgroundColor; // @synthesize maskViewBackgroundColor=_maskViewBackgroundColor;
@property(retain, nonatomic) UIColor *highlightedBackgroundColor; // @synthesize highlightedBackgroundColor=_highlightedBackgroundColor;
@property(retain, nonatomic) UIColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(nonatomic) struct UIEdgeInsets safetyMarginsOfSuperview; // @synthesize safetyMarginsOfSuperview=_safetyMarginsOfSuperview;
@property(nonatomic) double distanceBetweenTargetRect; // @synthesize distanceBetweenTargetRect=_distanceBetweenTargetRect;
@property(readonly, nonatomic) int currentLayoutDirection; // @synthesize currentLayoutDirection=_currentLayoutDirection;
@property(nonatomic) int preferLayoutDirection; // @synthesize preferLayoutDirection=_preferLayoutDirection;
@property(nonatomic) double minimumHeight; // @synthesize minimumHeight=_minimumHeight;
@property(nonatomic) double maximumHeight; // @synthesize maximumHeight=_maximumHeight;
@property(nonatomic) double minimumWidth; // @synthesize minimumWidth=_minimumWidth;
@property(nonatomic) double maximumWidth; // @synthesize maximumWidth=_maximumWidth;
@property(nonatomic) struct CGSize arrowSize; // @synthesize arrowSize=_arrowSize;
@property(nonatomic) struct UIEdgeInsets textEdgeInsets; // @synthesize textEdgeInsets=_textEdgeInsets;
@property(nonatomic) struct UIEdgeInsets imageEdgeInsets; // @synthesize imageEdgeInsets=_imageEdgeInsets;
@property(nonatomic) struct UIEdgeInsets contentEdgeInsets; // @synthesize contentEdgeInsets=_contentEdgeInsets;
@property(readonly, nonatomic) UIView *contentView; // @synthesize contentView=_contentView;
@property(nonatomic) _Bool automaticallyHidesWhenUserTap; // @synthesize automaticallyHidesWhenUserTap=_automaticallyHidesWhenUserTap;
@property(nonatomic) _Bool debug; // @synthesize debug=_debug;
- (void).cxx_destruct;
- (struct CGSize)sizeWithContentSize:(struct CGSize)arg1 sizeThatFits:(struct CGSize)arg2;
- (struct CGSize)contentSizeInSize:(struct CGSize)arg1;
- (void)initPopupContainerViewWindowIfNeeded;
- (_Bool)isSubviewShowing:(id)arg1;
- (_Bool)isShowing;
- (void)hideCompletionWithWindowMode:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)hideWithAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)hideWithAnimated:(_Bool)arg1;
- (void)showWithAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)showWithAnimated:(_Bool)arg1;
- (_Bool)canTipShowAtSpecifiedLayoutDirect:(int)arg1 targetRect:(struct CGRect)arg2 tipSize:(struct CGSize)arg3;
- (double)tipMinYWithTargetRect:(struct CGRect)arg1 tipSize:(struct CGSize)arg2 preferLayoutDirection:(int)arg3;
- (void)layoutWithTargetRect:(struct CGRect)arg1 inReferenceWindow:(id)arg2;
- (void)layoutWithTargetRectInScreenCoordinate:(struct CGRect)arg1;
- (void)layoutWithTargetView:(id)arg1;
- (void)layoutDefaultSubviews;
- (void)layoutSubviews;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setHighlighted:(_Bool)arg1;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
@property(readonly, nonatomic) UILabel *textLabel;
@property(readonly, nonatomic) UIImageView *imageView;
- (id)superviewIfExist;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (struct CGSize)sizeThatFitsInContentView:(struct CGSize)arg1;
- (void)didInitialized;
- (void)updateAppearance;

@end

