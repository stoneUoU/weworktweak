//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIControl.h>

#import "CLBackspaceDetectingTextFieldDelegate-Protocol.h"
#import "CLTokenViewDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"
#import "UITextFieldDelegate-Protocol.h"

@class CLToken, CLTokenView, NSArray, NSMutableArray, NSObject, NSString, UIColor, UIFont, UILabel, UITextField, UIView;
@protocol CLTokenInputViewDelegate;

@interface CLTokenInputView : UIControl <UIGestureRecognizerDelegate, CLBackspaceDetectingTextFieldDelegate, CLTokenViewDelegate, UITextFieldDelegate>
{
    _Bool _readonly;
    _Bool _shrink;
    _Bool _drawBottomBorder;
    NSObject<CLTokenInputViewDelegate> *_delegate;
    UIView *_fieldView;
    NSString *_fieldName;
    UIColor *_fieldColor;
    UIFont *_fieldFont;
    UILabel *_fieldLabel;
    NSString *_placeholderText;
    UIView *_accessoryView;
    long long _keyboardType;
    long long _autocapitalizationType;
    long long _autocorrectionType;
    UITextField *_textField;
    NSMutableArray *_tokens;
    NSMutableArray *_tokenViews;
    double _intrinsicContentHeight;
    double _additionalTextFieldYOffset;
    UILabel *_shrinkLabel;
    UIView *_separatorView;
    CLTokenView *_draggingTokenView;
    UIView *_draggingTokenSnapshotView;
    double _draggingLastEventTime;
    struct CGPoint _draggingTokenSnapshotViewOffset;
}

+ (id)scaleAnimationWithDuration:(double)arg1 fromScale:(double)arg2 toScale:(double)arg3;
+ (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
@property(nonatomic) double draggingLastEventTime; // @synthesize draggingLastEventTime=_draggingLastEventTime;
@property(nonatomic) struct CGPoint draggingTokenSnapshotViewOffset; // @synthesize draggingTokenSnapshotViewOffset=_draggingTokenSnapshotViewOffset;
@property(retain, nonatomic) UIView *draggingTokenSnapshotView; // @synthesize draggingTokenSnapshotView=_draggingTokenSnapshotView;
@property(retain, nonatomic) CLTokenView *draggingTokenView; // @synthesize draggingTokenView=_draggingTokenView;
@property(retain, nonatomic) UIView *separatorView; // @synthesize separatorView=_separatorView;
@property(retain, nonatomic) UILabel *shrinkLabel; // @synthesize shrinkLabel=_shrinkLabel;
@property(nonatomic) double additionalTextFieldYOffset; // @synthesize additionalTextFieldYOffset=_additionalTextFieldYOffset;
@property(nonatomic) double intrinsicContentHeight; // @synthesize intrinsicContentHeight=_intrinsicContentHeight;
@property(retain, nonatomic) NSMutableArray *tokenViews; // @synthesize tokenViews=_tokenViews;
@property(retain, nonatomic) NSMutableArray *tokens; // @synthesize tokens=_tokens;
@property(readonly, nonatomic) UITextField *textField; // @synthesize textField=_textField;
@property(nonatomic) _Bool drawBottomBorder; // @synthesize drawBottomBorder=_drawBottomBorder;
@property(nonatomic) long long autocorrectionType; // @synthesize autocorrectionType=_autocorrectionType;
@property(nonatomic) long long autocapitalizationType; // @synthesize autocapitalizationType=_autocapitalizationType;
@property(nonatomic) long long keyboardType; // @synthesize keyboardType=_keyboardType;
@property(retain, nonatomic) UIView *accessoryView; // @synthesize accessoryView=_accessoryView;
@property(copy, nonatomic) NSString *placeholderText; // @synthesize placeholderText=_placeholderText;
@property(retain, nonatomic) UILabel *fieldLabel; // @synthesize fieldLabel=_fieldLabel;
@property(retain, nonatomic) UIFont *fieldFont; // @synthesize fieldFont=_fieldFont;
@property(retain, nonatomic) UIColor *fieldColor; // @synthesize fieldColor=_fieldColor;
@property(nonatomic) _Bool shrink; // @synthesize shrink=_shrink;
@property(nonatomic) _Bool readonly; // @synthesize readonly=_readonly;
@property(copy, nonatomic) NSString *fieldName; // @synthesize fieldName=_fieldName;
@property(retain, nonatomic) UIView *fieldView; // @synthesize fieldView=_fieldView;
@property(nonatomic) __weak NSObject<CLTokenInputViewDelegate> *delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)updateFont;
- (void)endEditing;
- (void)beginEditing;
@property(readonly, nonatomic, getter=isEditing) _Bool editing;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)tokenDidLongPress:(id)arg1;
- (void)selectToken:(id)arg1;
- (void)unselectAllToken;
- (void)unselectAllTokenViewsAnimated:(_Bool)arg1;
- (void)selectTokenView:(id)arg1 animated:(_Bool)arg2;
- (void)switchTokenViewSelected:(id)arg1 animated:(_Bool)arg2;
- (void)tokenViewDidDeleteSelection:(id)arg1;
- (void)tokenViewDidRequestSelection:(id)arg1;
- (void)tokenViewDidRequestDelete:(id)arg1 replaceWithText:(id)arg2;
- (id)tokenForView:(id)arg1;
- (_Bool)textField:(id)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
@property(readonly, nonatomic) NSString *text;
@property(readonly, nonatomic) double textFieldDisplayOffset;
- (void)onTextFieldDidChange:(id)arg1;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (void)textFieldDidEndEditing:(id)arg1;
- (void)textFieldDidBeginEditing:(id)arg1;
- (void)textFieldDidDeleteBackwards:(id)arg1;
- (void)updatePlaceholderTextVisibility;
- (void)repositionViews;
- (long long)getRowsTotalHeight:(long long)arg1;
- (long long)getRowHeight:(long long)arg1;
- (long long)getY:(long long)arg1;
@property(readonly, nonatomic) CLToken *selectedToken;
- (id)tokenizeTextfieldText;
- (_Bool)hasToken:(id)arg1;
- (_Bool)hasToken;
@property(readonly, nonatomic) NSArray *allTokens;
- (long long)insertionIndexAtPoint:(struct CGPoint)arg1;
- (_Bool)moveToken:(id)arg1 toTokenInputView:(id)arg2 atIndex:(long long)arg3;
- (void)removeTokenAtIndex:(long long)arg1;
- (void)clearToken;
- (_Bool)removeToken:(id)arg1;
- (_Bool)addTokens:(id)arg1;
- (_Bool)addToken:(id)arg1;
- (id)addTokenView:(id)arg1;
- (void)tintColorDidChange;
@property(readonly, nonatomic) long long lines;
- (struct CGSize)intrinsicContentSize;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInit;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

