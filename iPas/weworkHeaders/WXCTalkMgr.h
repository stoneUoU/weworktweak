//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MMService.h"

#import "AVAudioPlayerDelegate-Protocol.h"
#import "AVVideoDataSource-Protocol.h"
#import "IWXCAUAudioDeviceExt-Protocol.h"
#import "IWXCSysCallCheckExt-Protocol.h"
#import "MMService-Protocol.h"
#import "WXCAUAudioDataSource-Protocol.h"
#import "WXCNetWorkDelegate-Protocol.h"

@class AVVideoDevice, NSMutableArray, NSMutableDictionary, NSObject, NSRecursiveLock, NSString, NSTimer, WXCTalkRoomData, WXTalkComponent;
@protocol OS_dispatch_queue;

@interface WXCTalkMgr : MMService <AVVideoDataSource, IWXCAUAudioDeviceExt, WXCAUAudioDataSource, IWXCSysCallCheckExt, AVAudioPlayerDelegate, MMService, WXCNetWorkDelegate>
{
    NSMutableArray *_mLastInviteUuidList;
    _Bool _isDataConnected;
    _Bool _isAudioDeviceStarted;
    _Bool _isReceiveOtherData;
    _Bool _isSelfAndOtherEnter;
    _Bool _isFirstConnnected;
    NSObject<OS_dispatch_queue> *_taskQueue;
    _Bool mIsInTalking;
    _Bool mIsTalkingInterrupt;
    _Bool _mIsTalkingSysHold;
    _Bool _mMuteTalk;
    _Bool _mIsSeizeMic;
    _Bool _mHasStartMultiVideoData;
    _Bool _mIsAudioDeviceRecordingActive;
    int _mNetSceneState;
    int _mMicId;
    int _mCurrActiveMemberCount;
    int _mBigVideoUuid;
    int _mMultiVideoSubscribeSeq;
    int _mMultiVideoOpenSeq;
    int _mAudioDeviceRecordingCheckCnt;
    WXCTalkRoomData *_roomData;
    WXTalkComponent *_component;
    NSRecursiveLock *_audioEncLock;
    NSRecursiveLock *_audioDecLock;
    NSTimer *_wxTalkTimer;
    NSTimer *_wxCheckTalkStatusTimer;
    NSTimer *_wxCheckTalkStatusMoreSensitiveTimer;
    struct __sFILE *_recordDumpFile;
    NSTimer *_mSystemCallHoldTimer;
    NSTimer *_wxHeartbeatTimeoutTimer;
    NSTimer *_mFrequentEnterTimer;
    NSTimer *_mFrequentAckTimer;
    NSMutableDictionary *_mBlockClientIdDicList;
    AVVideoDevice *_mMultiVideoDevice;
    NSRecursiveLock *_mMultiVideoEncLock;
}

+ (int)cpuCapacity;
+ (unsigned int)GetNetType;
@property(nonatomic) int mAudioDeviceRecordingCheckCnt; // @synthesize mAudioDeviceRecordingCheckCnt=_mAudioDeviceRecordingCheckCnt;
@property(nonatomic) _Bool mIsAudioDeviceRecordingActive; // @synthesize mIsAudioDeviceRecordingActive=_mIsAudioDeviceRecordingActive;
@property(nonatomic) int mMultiVideoOpenSeq; // @synthesize mMultiVideoOpenSeq=_mMultiVideoOpenSeq;
@property(nonatomic) int mMultiVideoSubscribeSeq; // @synthesize mMultiVideoSubscribeSeq=_mMultiVideoSubscribeSeq;
@property(nonatomic) int mBigVideoUuid; // @synthesize mBigVideoUuid=_mBigVideoUuid;
@property(retain, nonatomic) NSRecursiveLock *mMultiVideoEncLock; // @synthesize mMultiVideoEncLock=_mMultiVideoEncLock;
@property(retain, nonatomic) AVVideoDevice *mMultiVideoDevice; // @synthesize mMultiVideoDevice=_mMultiVideoDevice;
@property(nonatomic) _Bool mHasStartMultiVideoData; // @synthesize mHasStartMultiVideoData=_mHasStartMultiVideoData;
@property(nonatomic) int mCurrActiveMemberCount; // @synthesize mCurrActiveMemberCount=_mCurrActiveMemberCount;
@property(nonatomic) int mMicId; // @synthesize mMicId=_mMicId;
@property(nonatomic) _Bool mIsSeizeMic; // @synthesize mIsSeizeMic=_mIsSeizeMic;
@property(retain, nonatomic) NSMutableDictionary *mBlockClientIdDicList; // @synthesize mBlockClientIdDicList=_mBlockClientIdDicList;
@property(retain, nonatomic) NSTimer *mFrequentAckTimer; // @synthesize mFrequentAckTimer=_mFrequentAckTimer;
@property(retain, nonatomic) NSTimer *mFrequentEnterTimer; // @synthesize mFrequentEnterTimer=_mFrequentEnterTimer;
@property(nonatomic) _Bool mMuteTalk; // @synthesize mMuteTalk=_mMuteTalk;
@property(retain, nonatomic) NSTimer *wxHeartbeatTimeoutTimer; // @synthesize wxHeartbeatTimeoutTimer=_wxHeartbeatTimeoutTimer;
@property(retain, nonatomic) NSTimer *mSystemCallHoldTimer; // @synthesize mSystemCallHoldTimer=_mSystemCallHoldTimer;
@property(nonatomic) struct __sFILE *recordDumpFile; // @synthesize recordDumpFile=_recordDumpFile;
@property(retain, nonatomic) NSTimer *wxCheckTalkStatusMoreSensitiveTimer; // @synthesize wxCheckTalkStatusMoreSensitiveTimer=_wxCheckTalkStatusMoreSensitiveTimer;
@property(retain, nonatomic) NSTimer *wxCheckTalkStatusTimer; // @synthesize wxCheckTalkStatusTimer=_wxCheckTalkStatusTimer;
@property(retain, nonatomic) NSTimer *wxTalkTimer; // @synthesize wxTalkTimer=_wxTalkTimer;
@property(retain, nonatomic) NSRecursiveLock *audioDecLock; // @synthesize audioDecLock=_audioDecLock;
@property(retain, nonatomic) NSRecursiveLock *audioEncLock; // @synthesize audioEncLock=_audioEncLock;
@property(retain, nonatomic) WXTalkComponent *component; // @synthesize component=_component;
@property(retain, nonatomic) WXCTalkRoomData *roomData; // @synthesize roomData=_roomData;
@property(nonatomic) int mNetSceneState; // @synthesize mNetSceneState=_mNetSceneState;
@property(nonatomic) _Bool mIsTalkingSysHold; // @synthesize mIsTalkingSysHold=_mIsTalkingSysHold;
@property(nonatomic) _Bool mIsTalkingInterrupt; // @synthesize mIsTalkingInterrupt;
@property(nonatomic) _Bool mIsInTalking; // @synthesize mIsInTalking;
- (void)handleTalkQosMsg:(id)arg1;
- (void)insertFakeRoomDataFromInvitePVMergeInviteInfo:(id)arg1;
- (_Bool)sendSwitchPVMergeEncodingRequest;
- (_Bool)fixSpeakerChangeInvalid;
- (_Bool)isRoomBusyWithPvMergeTalkData:(id)arg1;
- (_Bool)exitCurPvMergeMultiTalk:(int)arg1;
- (_Bool)sendConvertToPstnRequest;
- (_Bool)checkPVMergeInviteCalleeValid:(id)arg1;
- (void)handleSubscribeLargeVideoResponse:(int)arg1 retBuf:(id)arg2 backFillData:(id)arg3;
- (int)getMemberAbility:(int)arg1;
- (int)getRoomUuidFromMemberId:(int)arg1;
- (int)getRoomMemberIdFromUuid:(int)arg1;
- (_Bool)sendSubscribeLargeVideoRequest:(int)arg1 isResumeFromRedirect:(_Bool)arg2;
- (void)sendMultiVideoRequest:(_Bool)arg1;
- (void)sendClientSeceneReport:(unsigned int)arg1 withSeceneExt:(id)arg2 withBackFillData:(id)arg3;
- (void)insertFakeRoomDataFromInviteGroupInfo:(id)arg1;
- (void)onCancelCreateNotify:(id)arg1 roomId:(unsigned int)arg2 roomKey:(unsigned long long)arg3 groupType:(int)arg4;
- (void)exitCurMutilTalkRoom;
- (void)onCreateNotify:(id)arg1 roomId:(unsigned int)arg2 roomKey:(unsigned long long)arg3 groupType:(int)arg4;
- (_Bool)enterCurrSingleTalk;
- (_Bool)checkCanEnterCurrSingleTalk;
- (_Bool)checkInvite:(int)arg1;
- (_Bool)checkInviteCalleeValid:(id)arg1;
- (void)doTalkStateReport;
- (_Bool)isTalkSessionActive;
- (void)onRespData:(id)arg1 taskId:(int)arg2 retCode:(int)arg3 retBuf:(id)arg4 backfillData:(id)arg5;
- (void)engineDoMemberChanged:(id)arg1;
- (_Bool)judgeIsCurrSessionMsg:(id)arg1;
- (void)handleMemberChangeMsgWithCurrSession:(id)arg1 memberChangeType:(int)arg2;
- (void)handleTalkMsgs:(id)arg1;
- (void)handleTalkInfoWithSingle2MultiInfo:(id)arg1;
- (void)handleTalkInfoWithVoiceConf:(id)arg1;
- (void)handleTalkInfoWithUsrProfileList:(id)arg1;
- (void)handleTalkInfoWithGroupInfo:(id)arg1;
- (void)handleTalkInfoChangeWithMemberList:(id)arg1 memberChangeType:(int)arg2;
- (_Bool)isCurrentRoom:(id)arg1 roomId:(unsigned int)arg2 roomKey:(unsigned long long)arg3 isOnlyCheckGroupId:(_Bool)arg4;
- (int)getRouteIdByGroupId:(id)arg1;
- (void)setTalkSoundMute:(_Bool)arg1;
- (void)setNetSceneState:(int)arg1;
- (_Bool)getIsOnlyCheckGroupIdByEnterType:(int)arg1;
- (_Bool)isInTalkSession;
- (void)doFrequentEnter;
- (void)doFrequentAck;
- (void)stopFrequentEnter;
- (void)stopFrequentAck;
- (void)notifyClientSceneExtResults:(int)arg1 resp:(id)arg2 reqClientExtList:(id)arg3 innerBackFillData:(id)arg4;
- (void)handleClientSceneReportResponse:(id)arg1 retCode:(int)arg2 backFillData:(id)arg3;
- (void)handleRedirectResponse:(id)arg1 retCode:(int)arg2;
- (void)sendRedirectReq;
- (int)getRoomMemberIdFromUuid:(int)arg1 memberList:(id)arg2;
- (int)getSelfRoomMemberId;
- (void)sendClientSeceneReport:(unsigned int)arg1 withSeceneExt:(id)arg2 backFillData:(id)arg3;
- (void)notifyModifyGroupInfoResult:(_Bool)arg1 groupId:(id)arg2;
- (void)handleModifyGroupInfoResponse:(id)arg1 retCode:(int)arg2 groupId:(id)arg3;
- (void)handleHeartBeatResponse:(id)arg1 retCode:(int)arg2;
- (void)handleInviteWXTalkModeRequest:(id)arg1 retCode:(int)arg2;
- (void)sendInviteWXTalkModeRequest:(id)arg1;
- (void)handleCreateWXTalkModeResponse:(id)arg1 retCode:(int)arg2 origReqData:(id)arg3;
- (_Bool)sendCreateWXTalkModeRequestForSingleAndMail:(id)arg1 clientGroupId:(id)arg2 voiceGroupInfo:(id)arg3 routeId:(int)arg4 mailVid:(id)arg5 mailEncryptInfo:(id)arg6 clientProfileList:(id)arg7;
- (void)sendCreateWXTalkModeRequest:(id)arg1 clientGroupId:(id)arg2 openGroupID:(id)arg3 voiceGroupInfo:(id)arg4 single2MultiInfo:(id)arg5 routeId:(int)arg6 userNames:(id)arg7;
- (_Bool)sendRejectEnterWXTalkModeRequest:(id)arg1 roomId:(unsigned int)arg2 roomKey:(unsigned long long)arg3 reason:(int)arg4;
- (void)handleExitTalkRoomResponse:(id)arg1 retCode:(int)arg2;
- (void)SendExitTalkRoomRequest:(int)arg1;
- (void)SendExitTalkRoomRequest:(int)arg1 groupId:(id)arg2 roomId:(unsigned int)arg3 roomKey:(unsigned long long)arg4 routeId:(int)arg5;
- (void)handleCancelCreateTalkRoomResponse:(id)arg1 retCode:(int)arg2;
- (void)sendCancelCreateRequest:(int)arg1;
- (void)handleEnterTalkRoomResponse:(id)arg1 retCode:(int)arg2 origReqData:(id)arg3;
- (_Bool)SendEnterTalkRoomRequestWithReqInfo:(id)arg1;
- (_Bool)SendEnterTalkRoomRequest:(int)arg1 pvMember:(id)arg2 corpVoipMaxSize:(unsigned int)arg3;
- (void)handleCreateNotifyAckResponse:(id)arg1 retCode:(int)arg2 backfillData:(id)arg3;
- (void)sendCreateNotifyAckRequest:(id)arg1 roomKey:(unsigned long long)arg2 roomId:(unsigned int)arg3;
- (_Bool)sendCreateNotifyAckRequest:(id)arg1 roomKey:(unsigned long long)arg2 roomId:(unsigned int)arg3 isFrequent:(_Bool)arg4;
- (_Bool)sendCreateNotifyAckRequest:(id)arg1 roomKey:(unsigned long long)arg2 roomId:(unsigned int)arg3 isFrequent:(_Bool)arg4 ackType:(int)arg5;
- (id)getLocalCapInfo;
- (void)reportClientSceneExt:(id)arg1 backFillData:(id)arg2;
- (void)reportClientScene:(unsigned int)arg1;
- (void)modifyGroupInfo:(id)arg1 newName:(id)arg2;
- (_Bool)rejectWXTalkMode:(id)arg1 roomId:(unsigned int)arg2 roomKey:(unsigned long long)arg3 reason:(int)arg4;
- (void)inviteTalkMembers:(id)arg1;
- (int)genNewSdkUniqueRouteId:(id)arg1;
- (int)genSdkUniqueRouteId:(id)arg1;
- (int)genRouteId;
- (void)createWXTalkMode:(id)arg1 voiceGroupInfo:(id)arg2 single2MultiInfo:(id)arg3 clientGroupId:(id)arg4 openGroupID:(id)arg5 routeId:(int)arg6 userNames:(id)arg7;
- (void)createWXTalkModeForMail:(id)arg1 calleeMailAddress:(id)arg2;
- (void)createWXTalkMode:(id)arg1 voiceGroupInfo:(id)arg2 single2MultiInfo:(id)arg3 clientGroupId:(id)arg4 openGroupID:(id)arg5 routeId:(int)arg6;
- (void)createWXTalkMode:(id)arg1;
- (id)prepareCreateWXTalkMode:(id)arg1 voiceGroupInfo:(id)arg2 single2MultiInfo:(id)arg3 openGroupID:(id)arg4;
- (void)closeWXTalkModeWithErrorType:(int)arg1 errorNo:(int)arg2;
- (void)closeWXTalkMode;
- (void)exitWXTalkRoom:(int)arg1;
- (void)exitCurMutilTalkRoom:(id)arg1;
- (void)onInvitedTalkMode:(id)arg1 roomId:(unsigned int)arg2 roomKey:(unsigned long long)arg3;
- (_Bool)openWXTalkMode:(id)arg1 roomId:(unsigned int)arg2 roomKey:(unsigned long long)arg3 enterType:(int)arg4 pvMember:(id)arg5 corpVoipMaxSize:(unsigned int)arg6;
- (_Bool)canEnterThisRoom:(id)arg1;
- (_Bool)isOpenAnyWXTalkMode;
- (void)setFocusPoint:(struct CGPoint)arg1 frame:(struct CGRect)arg2;
- (void)resetData;
- (void)onServiceClearData;
- (void)onServiceInit;
- (void)dealloc;
- (void)registerNotifications;
- (void)UnInitAll;
- (void)InitAll;
- (void)updateBigVideoRemoteMode:(id)arg1;
- (void)updateMultiVideoSeqsWithMemberList:(id)arg1;
- (void)resetMultiVideoSessionData;
- (int)getMultiVideoOpenReq;
- (int)getMultiVideoSubscribeReq;
- (id)getMultiVideoEngineDebugEncodeInfo:(_Bool)arg1;
- (id)getMultiVideoEngineDebugDecodeInfo:(int)arg1 isHD:(_Bool)arg2;
- (void)StatusNotify_MP:(int)arg1 nParam:(int)arg2 lParam:(int)arg3;
- (void)EventNotify_MP:(long long)arg1 param:(int)arg2 memberID:(int)arg3 remoteMode:(int)arg4 clientID:(unsigned long long)arg5;
- (int)VideoDevPutData_MP:(char *)arg1 imageWidth:(unsigned int)arg2 imageHeight:(unsigned int)arg3;
- (void)stopSendMultiVideoData;
- (void)startSendMultiVideoData;
- (void)resumeSubscribeRequest;
- (void)resumeSubscribeResult;
- (void)clearSubscribeVideoData;
- (void)subscribeVideoUuid:(int)arg1 isBig:(_Bool)arg2;
- (void)setRemoteMultiVideoCmdEnable:(_Bool)arg1;
- (void)setLocalMultiVideoCmdEnable:(_Bool)arg1;
- (void)setMultiVideoDelegate:(id)arg1;
- (void)stopLocalMultiVideoSession;
- (void)startLocalMultiVideoSession;
- (void)flipMultiVideoCamera;
- (void)resetMultiVideoDevice;
- (void)stopMultiVideoDevice;
- (void)heartbeatTimeoutFire;
- (void)stopHeartbeatTimeoutTimer;
- (void)restartHeartbeatTimeoutTimer;
- (void)onAudioInterruptionEnd;
- (void)onSysCallEndNotify;
- (void)onAudioInterruptionBegin:(_Bool)arg1;
- (void)onAudioDeviceSpeakerChange:(_Bool)arg1;
- (void)audioDeviceForceStop:(id)arg1;
- (void)ForceStop;
- (void)OnReportChannel:(id)arg1;
- (void)OnReportEngineSend:(id)arg1;
- (void)OnReportEngineRecv:(id)arg1 memberId:(int)arg2;
- (void)onReceOtherMemberData;
- (void)OnEngineError:(int)arg1;
- (void)OnOpenEngineSuccess;
- (void)OnNetworkChanged:(id)arg1;
- (void)NotifyMainThreadEngineError:(id)arg1;
- (void)NotifyMainThreadDataConnected;
- (void)switchEnginePVMergeEncoding;
- (void)setEngineWithBlockList;
- (_Bool)blockUserVoiceByClientId:(id)arg1 isBlock:(_Bool)arg2;
- (void)StopSession;
- (void)OnNetLevelChange:(int)arg1 signalLevel:(int)arg2 isLocal:(_Bool)arg3;
- (void)RedirectTo:(id)arg1 withEngineConf:(id)arg2 withHeadSignArray:(id)arg3 withIsEncode:(_Bool)arg4;
- (void)StartSession:(id)arg1 withEngineConf:(id)arg2 withHeadSignArray:(id)arg3 withIsEncode:(_Bool)arg4;
- (void)onAllNetworkChange:(id)arg1;
- (void)CloseRecordDumpFile;
- (void)CreateRecordDumpFile;
- (void)TimerCheck;
- (void)SendHeartBeatRequest;
- (int)getTalkStatusOfMember:(id)arg1;
- (void)stopCheckTalkStatusTimer;
- (void)checkAudioDeviceRecordingActive;
- (void)checkTalkStautsTimerFire;
- (_Bool)checkFriendHasEnterRoom;
- (void)detectingMembersTalkingState;
- (void)startCheckTalkStatusTimer;
- (void)onSpeakerChange:(_Bool)arg1;
- (void)getMutilTalkTotalFlow:(int *)arg1 andWwanBytes:(int *)arg2;
- (void)setMicroPhoneMute:(_Bool)arg1;
- (_Bool)getMuteOn;
- (_Bool)getSpeakerOn;
- (void)setSpeakerPhone:(_Bool)arg1;
- (void)restartMultiTalkAudioDeviceInMainThread;
- (void)delayRestartMultiTalkAudioDevice;
- (void)doRestartMultiTalkAudioDevice;
- (void)shutDownBySysCall:(_Bool)arg1;
- (void)processSysCallInterruption;
- (_Bool)shouldCloseBySysCall;
- (void)resumeVoiceTalkAfterSysCall:(_Bool)arg1;
- (void)beginAudioInterrupt:(_Bool)arg1;
- (void)doRestartVoiceTalk;
- (void)delayRestartVoiceTalk;
- (void)stopSystemCallHoldTimer;
- (void)onSystemCallHoldTimeOut;
- (void)startSystemCallHoldTimer;
- (int)AudioDevGetData:(char *)arg1 length:(unsigned int)arg2;
- (int)AudioDevPutData:(char *)arg1 length:(unsigned int)arg2;
- (_Bool)isGetDataReady;
- (void)DumpToRecordFile:(char *)arg1 withDataLen:(unsigned int)arg2;
- (_Bool)StartRecordAndPlayAudioForVoip;
- (void)StopTalk;
- (void)StartTalk;
- (void)updateMicId:(int)arg1;
- (int)getCurrMicId;
- (void)updateSelfSeizeMicStatusOnMemberChange:(id)arg1;
- (int)getSeizeMicUuidFromMemberList:(id)arg1;
- (void)handleMicClientSceneResult:(int)arg1 resp:(id)arg2 reqClientSceneExtList:(id)arg3 backFillData:(id)arg4;
- (_Bool)releaseMultiTalkMic;
- (_Bool)seizeMultiTalkMic:(int)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

