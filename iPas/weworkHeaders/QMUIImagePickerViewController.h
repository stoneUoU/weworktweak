//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "QMUICommonViewController.h"

#import "QMUIImagePickerPreviewViewControllerDelegate-Protocol.h"
#import "UICollectionViewDataSource-Protocol.h"
#import "UICollectionViewDelegate-Protocol.h"

@class NSMutableArray, NSString, QMUIAssetsGroup, QMUIButton, QMUIImagePickerPreviewViewController, UICollectionView, UICollectionViewFlowLayout, UILabel, UIView;
@protocol QMUIImagePickerViewControllerDelegate;

@interface QMUIImagePickerViewController : QMUICommonViewController <UICollectionViewDataSource, UICollectionViewDelegate, QMUIImagePickerPreviewViewControllerDelegate>
{
    _Bool _allowsMultipleSelection;
    _Bool _hasScrollToInitialPosition;
    double _minimumImageWidth;
    id <QMUIImagePickerViewControllerDelegate> _imagePickerViewControllerDelegate;
    UICollectionViewFlowLayout *_collectionViewLayout;
    UICollectionView *_collectionView;
    UIView *_operationToolBarView;
    QMUIButton *_previewButton;
    QMUIButton *_sendButton;
    UILabel *_imageCountLabel;
    NSMutableArray *_imagesAssetArray;
    QMUIAssetsGroup *_assetsGroup;
    NSMutableArray *_selectedImageAssetArray;
    long long _maximumSelectImageCount;
    long long _minimumSelectImageCount;
    NSString *_alertTitleWhenExceedMaxSelectImageCount;
    NSString *_alertButtonTitleWhenExceedMaxSelectImageCount;
    QMUIImagePickerPreviewViewController *_imagePickerPreviewViewController;
}

+ (id)appearance;
+ (void)initialize;
@property(nonatomic) _Bool hasScrollToInitialPosition; // @synthesize hasScrollToInitialPosition=_hasScrollToInitialPosition;
@property(retain, nonatomic) QMUIImagePickerPreviewViewController *imagePickerPreviewViewController; // @synthesize imagePickerPreviewViewController=_imagePickerPreviewViewController;
@property(copy, nonatomic) NSString *alertButtonTitleWhenExceedMaxSelectImageCount; // @synthesize alertButtonTitleWhenExceedMaxSelectImageCount=_alertButtonTitleWhenExceedMaxSelectImageCount;
@property(copy, nonatomic) NSString *alertTitleWhenExceedMaxSelectImageCount; // @synthesize alertTitleWhenExceedMaxSelectImageCount=_alertTitleWhenExceedMaxSelectImageCount;
@property(nonatomic) long long minimumSelectImageCount; // @synthesize minimumSelectImageCount=_minimumSelectImageCount;
@property(nonatomic) long long maximumSelectImageCount; // @synthesize maximumSelectImageCount=_maximumSelectImageCount;
@property(nonatomic) _Bool allowsMultipleSelection; // @synthesize allowsMultipleSelection=_allowsMultipleSelection;
@property(retain, nonatomic) NSMutableArray *selectedImageAssetArray; // @synthesize selectedImageAssetArray=_selectedImageAssetArray;
@property(retain, nonatomic) QMUIAssetsGroup *assetsGroup; // @synthesize assetsGroup=_assetsGroup;
@property(retain, nonatomic) NSMutableArray *imagesAssetArray; // @synthesize imagesAssetArray=_imagesAssetArray;
@property(retain, nonatomic) UILabel *imageCountLabel; // @synthesize imageCountLabel=_imageCountLabel;
@property(retain, nonatomic) QMUIButton *sendButton; // @synthesize sendButton=_sendButton;
@property(retain, nonatomic) QMUIButton *previewButton; // @synthesize previewButton=_previewButton;
@property(retain, nonatomic) UIView *operationToolBarView; // @synthesize operationToolBarView=_operationToolBarView;
@property(retain, nonatomic) UICollectionView *collectionView; // @synthesize collectionView=_collectionView;
@property(retain, nonatomic) UICollectionViewFlowLayout *collectionViewLayout; // @synthesize collectionViewLayout=_collectionViewLayout;
@property(nonatomic) __weak id <QMUIImagePickerViewControllerDelegate> imagePickerViewControllerDelegate; // @synthesize imagePickerViewControllerDelegate=_imagePickerViewControllerDelegate;
@property(nonatomic) double minimumImageWidth; // @synthesize minimumImageWidth=_minimumImageWidth;
- (void).cxx_destruct;
- (void)requestImageWithIndexPath:(id)arg1;
- (void)updateImageCountAndCheckLimited;
- (void)handleDownloadRetryButtonClick:(id)arg1;
- (void)handleProgressViewClick:(id)arg1;
- (void)handleCheckBoxButtonClick:(id)arg1;
- (void)handleCancelPickerImage:(id)arg1;
- (void)handlePreviewButtonClick:(id)arg1;
- (void)handleSendButtonClick:(id)arg1;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (void)scrollToInitialPositionIfNeeded;
- (struct CGSize)referenceImageSize;
- (void)initPreviewViewControllerIfNeeded;
- (void)refreshWithAssetsGroup:(id)arg1;
- (void)refreshWithImagesArray:(id)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewWillAppear:(_Bool)arg1;
- (void)setNavigationItemsIsInEditMode:(_Bool)arg1 animated:(_Bool)arg2;
- (void)viewDidLoad;
- (void)initSubviews;
- (void)dealloc;
- (void)didInitialized;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

