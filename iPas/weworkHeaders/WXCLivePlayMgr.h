//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MMService.h"

#import "AVAudioPlayerDelegate-Protocol.h"
#import "IWXCLivePlayerExt-Protocol.h"
#import "IWXCSysCallCheckExt-Protocol.h"
#import "MMService-Protocol.h"
#import "WXCAUAudioDataSource-Protocol.h"
#import "WXCNetWorkDelegate-Protocol.h"

@class NSArray, NSMutableDictionary, NSRecursiveLock, NSString, NSTimer, WXCLivePlayComponent, WXCLivePlayer, WXCPbVoiceConf;

@interface WXCLivePlayMgr : MMService <WXCAUAudioDataSource, AVAudioPlayerDelegate, IWXCSysCallCheckExt, WXCNetWorkDelegate, MMService, IWXCLivePlayerExt>
{
    _Bool _mHasStartPlay;
    _Bool _mHasStartSession;
    _Bool _mIsSessionFirstConnected;
    _Bool _mIsDataConnected;
    _Bool _mIsAudioDeviceStarted;
    _Bool _mIsInTalking;
    _Bool _mIsTalkingInterrupt;
    unsigned int _mRoomId;
    unsigned int _mMemberId;
    int _mCurrPlayType;
    int _mEncryptSwitch;
    int _mBusinessId;
    long long _mNetSceneState;
    NSString *_mLivePlayUniqueId;
    unsigned long long _mRoomKey;
    WXCLivePlayer *_mLivePlayer;
    NSArray *_mLiveAddrList;
    WXCLivePlayComponent *_component;
    NSRecursiveLock *_audioEncLock;
    NSRecursiveLock *_audioDecLock;
    WXCPbVoiceConf *_mVoiceConf;
    NSArray *_mHeadSigns;
    NSMutableDictionary *_mClientIDToVideoRenderMap;
    NSMutableDictionary *_mClientID2Timestamp;
    NSTimer *_mVideoCheckTimer;
}

@property(retain) NSTimer *mVideoCheckTimer; // @synthesize mVideoCheckTimer=_mVideoCheckTimer;
@property(retain) NSMutableDictionary *mClientID2Timestamp; // @synthesize mClientID2Timestamp=_mClientID2Timestamp;
@property(retain) NSMutableDictionary *mClientIDToVideoRenderMap; // @synthesize mClientIDToVideoRenderMap=_mClientIDToVideoRenderMap;
@property(nonatomic) _Bool mIsTalkingInterrupt; // @synthesize mIsTalkingInterrupt=_mIsTalkingInterrupt;
@property(nonatomic) _Bool mIsInTalking; // @synthesize mIsInTalking=_mIsInTalking;
@property(nonatomic) _Bool mIsAudioDeviceStarted; // @synthesize mIsAudioDeviceStarted=_mIsAudioDeviceStarted;
@property(nonatomic) int mBusinessId; // @synthesize mBusinessId=_mBusinessId;
@property(retain, nonatomic) NSArray *mHeadSigns; // @synthesize mHeadSigns=_mHeadSigns;
@property(nonatomic) int mEncryptSwitch; // @synthesize mEncryptSwitch=_mEncryptSwitch;
@property(retain, nonatomic) WXCPbVoiceConf *mVoiceConf; // @synthesize mVoiceConf=_mVoiceConf;
@property(nonatomic) _Bool mIsDataConnected; // @synthesize mIsDataConnected=_mIsDataConnected;
@property(nonatomic) _Bool mIsSessionFirstConnected; // @synthesize mIsSessionFirstConnected=_mIsSessionFirstConnected;
@property(nonatomic) _Bool mHasStartSession; // @synthesize mHasStartSession=_mHasStartSession;
@property(retain, nonatomic) NSRecursiveLock *audioDecLock; // @synthesize audioDecLock=_audioDecLock;
@property(retain, nonatomic) NSRecursiveLock *audioEncLock; // @synthesize audioEncLock=_audioEncLock;
@property(retain, nonatomic) WXCLivePlayComponent *component; // @synthesize component=_component;
@property(nonatomic) _Bool mHasStartPlay; // @synthesize mHasStartPlay=_mHasStartPlay;
@property(nonatomic) int mCurrPlayType; // @synthesize mCurrPlayType=_mCurrPlayType;
@property(retain, nonatomic) NSArray *mLiveAddrList; // @synthesize mLiveAddrList=_mLiveAddrList;
@property(retain, nonatomic) WXCLivePlayer *mLivePlayer; // @synthesize mLivePlayer=_mLivePlayer;
@property(nonatomic) unsigned int mMemberId; // @synthesize mMemberId=_mMemberId;
@property(nonatomic) unsigned long long mRoomKey; // @synthesize mRoomKey=_mRoomKey;
@property(nonatomic) unsigned int mRoomId; // @synthesize mRoomId=_mRoomId;
@property(copy, nonatomic) NSString *mLivePlayUniqueId; // @synthesize mLivePlayUniqueId=_mLivePlayUniqueId;
@property(nonatomic) long long mNetSceneState; // @synthesize mNetSceneState=_mNetSceneState;
- (void).cxx_destruct;
- (void)onRespData:(id)arg1 taskId:(int)arg2 retCode:(int)arg3 retBuf:(id)arg4 backfillData:(id)arg5;
- (void)handleStopLivePlayResp:(id)arg1 retCode:(int)arg2 backFillData:(id)arg3;
- (_Bool)sendStopLivePlayRequeset:(id)arg1 roomId:(unsigned int)arg2 roomKey:(unsigned long long)arg3 memberId:(unsigned int)arg4 reason:(int)arg5 playType:(int)arg6;
- (void)handleEnterLivePlayResp:(id)arg1 retCode:(int)arg2 backFillData:(id)arg3;
- (_Bool)sendEnterLivePlayRequeset:(id)arg1;
- (void)setCurrNetSceneState:(long long)arg1;
- (void)resetSession;
- (void)testPlayer;
- (_Bool)exitAndCloseLivePlay;
- (void)closeLivePlayWithError:(long long)arg1;
- (void)closeLivePlay;
- (void)exitLivePlay:(int)arg1;
- (void)handleLiveMsgs:(id)arg1;
- (_Bool)enterLivePlay:(id)arg1;
- (void)dealloc;
- (void)onServiceInit;
- (id)createPlayerFromLiveAddr:(id)arg1;
- (id)getValidAddrListFromLiveAddrArray:(id)arg1;
- (void)wxcLivePlayerOnPlayEnd:(id)arg1;
- (void)wxcLivePlayerOnPlayErr:(long long)arg1 player:(id)arg2;
- (int)getSupportPlayerType;
- (void)stopPlay;
- (void)startPlayWithIndex:(unsigned long long)arg1;
- (void)startPlay:(id)arg1 voiceConf:(id)arg2 encryptSwitch:(int)arg3 headSigns:(id)arg4 businessid:(unsigned int)arg5;
- (void)onSpeakerChange:(_Bool)arg1;
- (void)getMutilTalkTotalFlow:(int *)arg1 andWwanBytes:(int *)arg2;
- (void)setMicroPhoneMute:(_Bool)arg1;
- (_Bool)getMuteOn;
- (_Bool)getSpeakerOn;
- (void)setSpeakerPhone:(_Bool)arg1;
- (void)restartMultiTalkAudioDeviceInMainThread;
- (void)delayRestartMultiTalkAudioDevice;
- (void)doRestartMultiTalkAudioDevice;
- (void)resumeVoiceTalkAfterSysCall:(_Bool)arg1;
- (void)beginAudioInterrupt:(_Bool)arg1;
- (void)doRestartVoiceTalk;
- (void)delayRestartVoiceTalk;
- (_Bool)checkAndCloseBySysCall;
- (void)onAudioInterruptionEnd;
- (void)onSysCallEndNotify;
- (void)onAudioInterruptionBegin:(_Bool)arg1;
- (int)AudioDevGetData:(char *)arg1 length:(unsigned int)arg2;
- (int)AudioDevPutData:(char *)arg1 length:(unsigned int)arg2;
- (_Bool)StartRecordAndPlayAudioForVoip;
- (void)stopRelayDevice;
- (void)startReplayDevice;
- (_Bool)removeVideoViewForMember:(unsigned long long)arg1;
- (_Bool)createVideoViewForMember:(unsigned long long)arg1 withParentView:(id)arg2;
- (void)EventNotify_MP:(long long)arg1 param:(int)arg2 memberID:(int)arg3 clientID:(unsigned long long)arg4;
- (void)onAudioDeviceSpeakerChange:(_Bool)arg1;
- (void)audioDeviceForceStop:(id)arg1;
- (void)ForceStop;
- (void)OnReportChannel:(id)arg1;
- (void)OnReportEngineSend:(id)arg1;
- (void)OnReportEngineRecv:(id)arg1 memberId:(int)arg2;
- (void)onReceOtherMemberData;
- (void)OnEngineError:(int)arg1;
- (void)NotifyMainThreadEngineError:(id)arg1;
- (void)OnOpenEngineSuccess;
- (void)NotifyMainThreadDataConnected;
- (void)OnNetworkChanged:(id)arg1;
- (void)StopSession;
- (void)onCheckVideoTimerFired;
- (void)StartSession:(id)arg1 withEngineConf:(id)arg2 withHeadSignArray:(id)arg3 withIsEncode:(_Bool)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

